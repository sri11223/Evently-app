# docker-compose.yml
services:
  # PostgreSQL Shards (4 shards for horizontal scaling)
  shard_0:
    image: postgres:15-alpine
    container_name: evently_shard_0
    environment:
      POSTGRES_DB: shard_0_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"  # Shard 0 on port 5433
    volumes:
      - shard_0_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shard_0_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  shard_1:
    image: postgres:15-alpine
    container_name: evently_shard_1
    environment:
      POSTGRES_DB: shard_1_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5434:5432"  # Shard 1 on port 5434
    volumes:
      - shard_1_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shard_1_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  shard_2:
    image: postgres:15-alpine
    container_name: evently_shard_2
    environment:
      POSTGRES_DB: shard_2_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"  # Shard 2 on port 5435
    volumes:
      - shard_2_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shard_2_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  shard_3:
    image: postgres:15-alpine
    container_name: evently_shard_3
    environment:
      POSTGRES_DB: shard_3_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5436:5432"  # Shard 3 on port 5436
    volumes:
      - shard_3_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shard_3_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: evently_redis
    command: redis-server --appendonly yes --requirepass redispass
    ports:
      - "6380:6379"  # Changed from 6379 to 6380
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis Commander (Optional - Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: evently_redis_gui
    environment:
      REDIS_HOSTS: local:redis:6379:0:redispass
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - gui

  # pgAdmin (Optional - PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: evently_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@evently.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGLADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - shard_0
      - shard_1
      - shard_2
      - shard_3
    profiles:
      - gui

volumes:
  shard_0_data:
    driver: local
  shard_1_data:
    driver: local
  shard_2_data:
    driver: local
  shard_3_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: evently_network
